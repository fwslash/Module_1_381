	component nios2_system is
		port (
			clk_clk                                         : in    std_logic                     := 'X';             -- clk
			reset_reset_n                                   : in    std_logic                     := 'X';             -- reset_n
			sdram_wire_addr                                 : out   std_logic_vector(11 downto 0);                    -- addr
			sdram_wire_ba                                   : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n                                : out   std_logic;                                        -- cas_n
			sdram_wire_cke                                  : out   std_logic;                                        -- cke
			sdram_wire_cs_n                                 : out   std_logic;                                        -- cs_n
			sdram_wire_dq                                   : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm                                  : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_wire_ras_n                                : out   std_logic;                                        -- ras_n
			sdram_wire_we_n                                 : out   std_logic;                                        -- we_n
			ledg_export                                     : out   std_logic_vector(7 downto 0);                     -- export
			ledr_export                                     : out   std_logic_vector(17 downto 0);                    -- export
			switches_export                                 : in    std_logic_vector(17 downto 0) := (others => 'X'); -- export
			keys_export                                     : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			lcd_data_DATA                                   : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- DATA
			lcd_data_ON                                     : out   std_logic;                                        -- ON
			lcd_data_BLON                                   : out   std_logic;                                        -- BLON
			lcd_data_EN                                     : out   std_logic;                                        -- EN
			lcd_data_RS                                     : out   std_logic;                                        -- RS
			lcd_data_RW                                     : out   std_logic;                                        -- RW
			video_vga_controller_0_external_interface_CLK   : out   std_logic;                                        -- CLK
			video_vga_controller_0_external_interface_HS    : out   std_logic;                                        -- HS
			video_vga_controller_0_external_interface_VS    : out   std_logic;                                        -- VS
			video_vga_controller_0_external_interface_BLANK : out   std_logic;                                        -- BLANK
			video_vga_controller_0_external_interface_SYNC  : out   std_logic;                                        -- SYNC
			video_vga_controller_0_external_interface_R     : out   std_logic_vector(9 downto 0);                     -- R
			video_vga_controller_0_external_interface_G     : out   std_logic_vector(9 downto 0);                     -- G
			video_vga_controller_0_external_interface_B     : out   std_logic_vector(9 downto 0);                     -- B
			sdcard_b_SD_cmd                                 : inout std_logic                     := 'X';             -- b_SD_cmd
			sdcard_b_SD_dat                                 : inout std_logic                     := 'X';             -- b_SD_dat
			sdcard_b_SD_dat3                                : inout std_logic                     := 'X';             -- b_SD_dat3
			sdcard_o_SD_clock                               : out   std_logic;                                        -- o_SD_clock
			ps2_peri_CLK                                    : inout std_logic                     := 'X';             -- CLK
			ps2_peri_DAT                                    : inout std_logic                     := 'X';             -- DAT
			sram_0_external_interface_DQ                    : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DQ
			sram_0_external_interface_ADDR                  : out   std_logic_vector(17 downto 0);                    -- ADDR
			sram_0_external_interface_LB_N                  : out   std_logic;                                        -- LB_N
			sram_0_external_interface_UB_N                  : out   std_logic;                                        -- UB_N
			sram_0_external_interface_CE_N                  : out   std_logic;                                        -- CE_N
			sram_0_external_interface_OE_N                  : out   std_logic;                                        -- OE_N
			sram_0_external_interface_WE_N                  : out   std_logic;                                        -- WE_N
			audio_ADCDAT                                    : in    std_logic                     := 'X';             -- ADCDAT
			audio_ADCLRCK                                   : in    std_logic                     := 'X';             -- ADCLRCK
			audio_BCLK                                      : in    std_logic                     := 'X';             -- BCLK
			audio_DACDAT                                    : out   std_logic;                                        -- DACDAT
			audio_DACLRCK                                   : in    std_logic                     := 'X';             -- DACLRCK
			sdram_clk_clk                                   : out   std_logic;                                        -- clk
			audio_secondary_clk                             : in    std_logic                     := 'X';             -- clk
			audio_clk_clk                                   : out   std_logic;                                        -- clk
			av_config_SDAT                                  : inout std_logic                     := 'X';             -- SDAT
			av_config_SCLK                                  : out   std_logic                                         -- SCLK
		);
	end component nios2_system;

