#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <Math.h>
#include "io.h"
#include "system.h"
#include "altera_up_avalon_video_pixel_buffer_dma.h"
#include "altera_up_avalon_video_character_buffer_with_dma.h"
#define drawer_base (volatile int *) 0x6000 //must be base address of pixel_drawer avalon_slave
#define BACKGROUND 0x00000

unsigned int background_colour = 0x00000;

/* GIMP RGBA C-Source image dump (rand_image.c) */
#define GIMP_IMAGE_WIDTH (5)
#define GIMP_IMAGE_HEIGHT (5)
#define GIMP_IMAGE_BYTES_PER_PIXEL (4) /* 3:RGB, 4:RGBA */
#define GIMP_IMAGE_PIXEL_DATA ((unsigned char*) GIMP_IMAGE_pixel_data)
static const unsigned char GIMP_IMAGE_pixel_data[5 * 5 * 4 + 1] =
("\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0"
 "\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0");

void draw_image(alt_up_pixel_buffer_dma_dev* pixel_buffer, int x, int y );

void draw_image(alt_up_pixel_buffer_dma_dev* pixel_buffer, int x, int y );{
	unsigned short * pixel_offset = malloc(sizeof(short)); //2 bytes
	pixel_offset = GIMP_IMAGE_pixel_data; //set pointer to start of image data

	for(int j=0; j <= GIMP_IMAGE_HEIGHT; j++){
		for(int i=0; i <= GIMP_IMAGE_WIDTH; i++){
			alt_up_pixel_buffer_draw(pixel_buffer, pixel_offset x+i, y+j);
			pixel_offset++;
		}
	}

}

