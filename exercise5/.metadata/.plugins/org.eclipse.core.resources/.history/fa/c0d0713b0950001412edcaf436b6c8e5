#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <Math.h>
#include "io.h"
#include "system.h"
#include "rand_bmp2.h"
#include "altera_up_avalon_video_pixel_buffer_dma.h"
#include "altera_up_avalon_video_character_buffer_with_dma.h"
#define drawer_base (volatile int *) 0x6000 //must be base address of pixel_drawer avalon_slave
#define BACKGROUND 0x00000

void draw_image(alt_up_pixel_buffer_dma_dev* pixel_buffer, int x, int y );

//#define GIMP_IMAGE_WIDTH (5)
//#define GIMP_IMAGE_HEIGHT (5)
//#define GIMP_IMAGE_BYTES_PER_PIXEL (3) /* 3:RGB, 4:RGBA */
//#define GIMP_IMAGE_PIXEL_DATA ((unsigned char*) GIMP_IMAGE_pixel_data)
//static const unsigned char GIMP_IMAGE_pixel_data[5 * 5 * 3 + 1] =
//("]g\302\20+6+6\0\370\302\30\0\370]g\302\20+6\302\30\0\370\0\370]g+6]g\0\370"
// "\0\370\0\370+6\314\356]g\314\356\314\356]g");


#define GIMP_IMAGE_WIDTH (5)
#define GIMP_IMAGE_HEIGHT (5)
#define GIMP_IMAGE_BYTES_PER_PIXEL (4) /* 3:RGB, 4:RGBA */
#define GIMP_IMAGE_PIXEL_DATA ((unsigned char*) GIMP_IMAGE_pixel_data)
static const unsigned char GIMP_IMAGE_pixel_data[5 * 5 * 4 + 1] =
("\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0"
 "\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0\377\377\0\0");



int main(void){
	alt_up_pixel_buffer_dma_dev* pixel_buffer;
	pixel_buffer = alt_up_pixel_buffer_dma_open_dev("/dev/video_pixel_buffer_dma_0");
	if (pixel_buffer == 0) {
		printf("error initializing pixel buffer (check name in alt_up_pixel_buffer_dma_open_dev)\n");
	}
	alt_up_pixel_buffer_dma_change_back_buffer_address(pixel_buffer, SRAM_0_BASE);
	alt_up_pixel_buffer_dma_swap_buffers(pixel_buffer);
	while (alt_up_pixel_buffer_dma_check_swap_buffers_status(pixel_buffer));
	alt_up_pixel_buffer_dma_clear_screen(pixel_buffer, 0);

	draw_image(pixel_buffer, 50, 50);
	//alt_up_pixel_buffer_dma_draw_box(pixel_buffer, 30, 30, 35, 35, 0xFF00, 0);
	return 0;
}

void draw_image(alt_up_pixel_buffer_dma_dev* pixel_buffer, int x, int y ){
	unsigned short * pixel_offset = malloc(sizeof(short)); //2 bytes
	//unsigned short number = (unsigned short) strtoul(name, NULL, 0);
	pixel_offset = &GIMP_IMAGE_pixel_data; //set pointer to start of image data
	int i, j;
	for(j=0; j <= GIMP_IMAGE_HEIGHT; j++){
		for(i=0; i <= GIMP_IMAGE_WIDTH; i++){
			alt_up_pixel_buffer_dma_draw(pixel_buffer, *pixel_offset, x+i, y+j);
			pixel_offset++;
		}
	}
}
